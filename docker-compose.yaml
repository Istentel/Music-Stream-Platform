version: '3'
services:
  flaskserver:
    container_name: flaskserver
    build: ./flask_server/
    command: sh -c "sleep 30s ; python3 ./run.py"
    ports:
      - "8080:8080"
    depends_on:
      - mysql_db
    networks:
      - mynetwork

  mysql_db:
    container_name: mysql_db
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    networks:
    - mynetwork

  auth_service:
    container_name: auth_service
    build:
      context: ./auth_service
    environment:
      DB_HOST: mysql_db
      DB_NAME: db
      DB_USER: user
      DB_PASSWORD: password
      JWT_SECRET: '7c121c18-7db5-4a81-97d8-358f55b70bbf'
    links:
      - mysql_db
    depends_on:
      - mysql_db
    ports:
      - "5001:5001"
    networks:
      - mynetwork
  
  playback:
    build: ./playback_service/
    command: python -u run.py
    ports:
      - "5000:5000"
    volumes:
      - ./playback_service/:/app
      - ./playback_service/db_songs:/var/lib/songs/data:ro
    links:
      - mongo_db
    networks:
      - mynetwork


  mongo_db:
    image: mongo:latest
    hostname: mongo_db
    environment:
      - MONGO_INITDB_DATABASE=songs_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./playback_service/init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro   
    ports:
      - "27017:27017"
    networks:
      - mynetwork

networks:
  mynetwork:

